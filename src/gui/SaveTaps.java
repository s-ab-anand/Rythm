/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrameTest;

import java.io.BufferedWriter;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author anandab
 */
public class SaveTaps extends javax.swing.JFrame {

    /**
     * Creates new form SaveTaps
     */
    static int tries = 0;
    static int count = 0;
    List<List<Long>> interval = new ArrayList<List<Long>>();
    List<Long> interv = new ArrayList<Long>();
    List<Float> mean = new ArrayList<Float>();
    List<Double> stdDev = new ArrayList<Double>();
    
    public SaveTaps() {
        initComponents();
        interv.clear();
        interval.clear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("RESET");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Click Here");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("No. of clicks = 0");

        jLabel2.setText("No. of tries = 0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(171, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel2)
                                .addGap(33, 33, 33)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton1)
                                        .addComponent(jButton2))
                                .addGap(21, 21, 21)
                                .addComponent(jLabel1)
                                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Counting no. of taps and recording the time at which each tap event occurs
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        interv.add(System.currentTimeMillis());
        count++;
        jLabel1.setText("No. of clicks = "+count);

    }//GEN-LAST:event_jButton3ActionPerformed
    /*All attempts to record taps have finished. We now calculate the mean and standard deviation for each tap interval and for each tap sequence,
      the considered length would be the length of shortest tap sequence length. */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        count = 0;
        jLabel1.setText("No. of clicks = "+count);

        if(interv.size() > 0){
            calculateTimeIntervals();
            List<Long> copyList = new ArrayList<>();
            copyList.addAll(interv);
            interval.add(copyList);
            tries++;
            jLabel2.setText("No. of tries = "+tries);
        }
        int i = 1;
        int min = interval.get(0).size();
        int s;
        while(i<interval.size() && (s=interval.get(i++).size())>0)
            if(min>s)
                min=s;


        for(int k = 0; k < min; k++){
            int sum=0;
            for(int j = 0; j < interval.size(); j++){
                sum+= interval.get(j).get(k);
            }
            mean.add(k, (float)sum/interval.size());
        }

        for(int k = 0; k < min; k++){
            float calc1 = 0;
            for(int j = 0; j < interval.size(); j++){
                calc1+= Math.pow(interval.get(j).get(k)-mean.get(k), 2.0);
            }

            stdDev.add(k, Math.sqrt(calc1/interval.size()));
        }
        JOptionPane.showMessageDialog(this, "Mean of the model is " + mean + " \nand Standard Deviation is " + stdDev);
        saveTap();
        interval.clear();
        mean.clear();
        dispose();
        setVisible(false);
        
    }//GEN-LAST:event_jButton1ActionPerformed
    //One attempt for recording taps finished
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        count = 0;
        jLabel1.setText("No. of clicks = " + count);
        calculateTimeIntervals();
        List<Long> copyList = new ArrayList<>();
        copyList.addAll(interv);
        interval.add(copyList);
        interv = new ArrayList<>();
        tries++;
        jLabel2.setText("No. of tries = "+tries);
    }//GEN-LAST:event_jButton2ActionPerformed

    //calculate time intervals between two successive taps
    private void calculateTimeIntervals(){

        int s = interv.size();
        for(int i = 0; i < s-1; i++)
            interv.set(i, interv.get(i+1) - interv.get(i));
        interv.remove(s-1);
    }
    //writes mean and standard deviation of each tap interval to a txt file
    private void saveTap(){
        Writer writer = null;
        Writer writer1 = null;
        try{
            writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("mean.txt"), "utf-8"));
            writer.write(mean.toString());
            writer1 = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("standDev.txt"), "utf-8"));
            writer1.write(stdDev.toString());
        }catch (IOException f){
            System.out.println("Something went wrong");
        } finally {
            try {writer.close();writer1.close();} catch (Exception ex) {}
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaveTaps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaveTaps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaveTaps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaveTaps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaveTaps().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
